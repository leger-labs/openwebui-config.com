/**
 * Generated Zod schemas from OpenWebUI OpenAPI configuration
 * DO NOT EDIT DIRECTLY - Changes will be overwritten
 */
import { z } from 'zod';

// Single combined schema for all OpenWebUI configuration properties
export const OpenWebUIConfigSchema = z.object({
  WEBUI_URL: z.string().optional(),
  ENABLE_SIGNUP: z.boolean().optional(),
  ENABLE_LOGIN_FORM: z.boolean().optional(),
  DEFAULT_LOCALE: z.string().optional(),
  DEFAULT_MODELS: z.string().optional(),
  DEFAULT_USER_ROLE: z
    .union([z.literal('pending'), z.literal('user'), z.literal('admin')])
    .optional(),
  PENDING_USER_OVERLAY_TITLE: z.string().optional(),
  PENDING_USER_OVERLAY_CONTENT: z.string().optional(),
  ENABLE_CHANNELS: z.boolean().optional(),
  WEBHOOK_URL: z.string().optional(),
  ENABLE_ADMIN_EXPORT: z.boolean().optional(),
  ENABLE_ADMIN_CHAT_ACCESS: z.boolean().optional(),
  ENABLE_USER_WEBHOOKS: z.boolean().optional(),
  RESPONSE_WATERMARK: z.string().optional(),
  THREAD_POOL_SIZE: z.number().optional(),
  SHOW_ADMIN_DETAILS: z.boolean().optional(),
  ADMIN_EMAIL: z.string().optional(),
  ENV: z.union([z.literal('dev'), z.literal('prod')]).optional(),
  ENABLE_PERSISTENT_CONFIG: z.boolean().optional(),
  CUSTOM_NAME: z.string().optional(),
  WEBUI_NAME: z.string().optional(),
  PORT: z.number().optional(),
  ENABLE_REALTIME_CHAT_SAVE: z.boolean().optional(),
  BYPASS_MODEL_ACCESS_CONTROL: z.boolean().optional(),
  WEBUI_BUILD_HASH: z.string().optional(),
  WEBUI_BANNERS: z.array(z.any()).optional(),
  USE_CUDA_DOCKER: z.boolean().optional(),
  EXTERNAL_PWA_MANIFEST_URL: z.string().optional(),
  ENABLE_TITLE_GENERATION: z.boolean().optional(),
  LICENSE_KEY: z.string().optional(),
  SSL_ASSERT_FINGERPRINT: z.string().optional(),
  DEFAULT_PROMPT_SUGGESTIONS: z.array(z.any()).optional(),
  AIOHTTP_CLIENT_TIMEOUT: z.number().optional(),
  AIOHTTP_CLIENT_TIMEOUT_MODEL_LIST: z.number().optional(),
  AIOHTTP_CLIENT_TIMEOUT_OPENAI_MODEL_LIST: z.number().optional(),
  DATA_DIR: z.string().optional(),
  FONTS_DIR: z.string().optional(),
  FRONTEND_BUILD_DIR: z.string().optional(),
  STATIC_DIR: z.string().optional(),
  ENABLE_OLLAMA_API: z.boolean().optional(),
  OLLAMA_BASE_URLS: z.string().optional(),
  USE_OLLAMA_DOCKER: z.boolean().optional(),
  K8S_FLAG: z.boolean().optional(),
  ENABLE_OPENAI_API: z.boolean().optional(),
  OPENAI_API_BASE_URL: z.string().optional(),
  OPENAI_API_BASE_URLS: z.string().optional(),
  OPENAI_API_KEY: z.string().optional(),
  OPENAI_API_KEYS: z.string().optional(),
  TASK_MODEL: z.string().optional(),
  TASK_MODEL_EXTERNAL: z.string().optional(),
  TITLE_GENERATION_PROMPT_TEMPLATE: z.string().optional(),
  TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE: z.string().optional(),
  ENABLE_CODE_EXECUTION: z.boolean().optional(),
  CODE_EXECUTION_ENGINE: z.union([z.literal('jupyter'), z.literal('pyodide')]).optional(),
  CODE_EXECUTION_JUPYTER_URL: z.string().optional(),
  CODE_EXECUTION_JUPYTER_AUTH: z.string().optional(),
  CODE_EXECUTION_JUPYTER_AUTH_TOKEN: z.string().optional(),
  CODE_EXECUTION_JUPYTER_AUTH_PASSWORD: z.string().optional(),
  CODE_EXECUTION_JUPYTER_TIMEOUT: z.string().optional(),
  ENABLE_CODE_INTERPRETER: z.boolean().optional(),
  CODE_INTERPRETER_ENGINE: z.union([z.literal('jupyter'), z.literal('pyodide')]).optional(),
  CODE_INTERPRETER_PROMPT_TEMPLATE: z.string().optional(),
  CODE_INTERPRETER_JUPYTER_URL: z.string().optional(),
  CODE_INTERPRETER_JUPYTER_AUTH: z.string().optional(),
  CODE_INTERPRETER_JUPYTER_AUTH_TOKEN: z.string().optional(),
  CODE_INTERPRETER_JUPYTER_AUTH_PASSWORD: z.string().optional(),
  CODE_INTERPRETER_JUPYTER_TIMEOUT: z.string().optional(),
  ENABLE_DIRECT_CONNECTIONS: z.boolean().optional(),
  ENABLE_AUTOCOMPLETE_GENERATION: z.boolean().optional(),
  AUTOCOMPLETE_GENERATION_INPUT_MAX_LENGTH: z.number().optional(),
  AUTOCOMPLETE_GENERATION_PROMPT_TEMPLATE: z.string().optional(),
  ENABLE_EVALUATION_ARENA_MODELS: z.boolean().optional(),
  ENABLE_MESSAGE_RATING: z.boolean().optional(),
  ENABLE_COMMUNITY_SHARING: z.boolean().optional(),
  ENABLE_TAGS_GENERATION: z.boolean().optional(),
  TAGS_GENERATION_PROMPT_TEMPLATE: z.string().optional(),
  ENABLE_API_KEY: z.boolean().optional(),
  ENABLE_API_KEY_ENDPOINT_RESTRICTIONS: z.boolean().optional(),
  API_KEY_ALLOWED_ENDPOINTS: z.string().optional(),
  JWT_EXPIRES_IN: z.number().optional(),
  ENABLE_FORWARD_USER_INFO_HEADERS: z.string().optional(),
  ENABLE_WEB_LOADER_SSL_VERIFICATION: z.boolean().optional(),
  WEBUI_SESSION_COOKIE_SAME_SITE: z
    .union([z.literal('lax'), z.literal('strict'), z.literal('none')])
    .optional(),
  WEBUI_SESSION_COOKIE_SECURE: z.boolean().optional(),
  WEBUI_AUTH_COOKIE_SAME_SITE: z
    .union([z.literal('lax'), z.literal('strict'), z.literal('none')])
    .optional(),
  WEBUI_AUTH_COOKIE_SECURE: z.boolean().optional(),
  WEBUI_AUTH: z.boolean().optional(),
  WEBUI_SECRET_KEY: z.string().optional(),
  OFFLINE_MODE: z.boolean().optional(),
  RESET_CONFIG_ON_START: z.boolean().optional(),
  SAFE_MODE: z.boolean().optional(),
  CORS_ALLOW_ORIGIN: z.string().optional(),
  RAG_EMBEDDING_MODEL_TRUST_REMOTE_CODE: z.boolean().optional(),
  RAG_RERANKING_MODEL_TRUST_REMOTE_CODE: z.boolean().optional(),
  RAG_EMBEDDING_MODEL_AUTO_UPDATE: z.boolean().optional(),
  RAG_RERANKING_MODEL_AUTO_UPDATE: z.boolean().optional(),
  VECTOR_DB: z
    .union([
      z.literal('chroma'),
      z.literal('elasticsearch'),
      z.literal('milvus'),
      z.literal('opensearch'),
      z.literal('pgvector'),
      z.literal('pinecone'),
      z.literal('qdrant'),
    ])
    .optional(),
  CHROMA_TENANT: z.string().optional(),
  CHROMA_DATABASE: z.string().optional(),
  CHROMA_HTTP_HOST: z.string().optional(),
  CHROMA_HTTP_PORT: z.number().optional(),
  CHROMA_HTTP_HEADERS: z.string().optional(),
  CHROMA_HTTP_SSL: z.boolean().optional(),
  CHROMA_CLIENT_AUTH_PROVIDER: z.string().optional(),
  CHROMA_CLIENT_AUTH_CREDENTIALS: z.string().optional(),
  ELASTICSEARCH_API_KEY: z.string().optional(),
  ELASTICSEARCH_CA_CERTS: z.string().optional(),
  ELASTICSEARCH_CLOUD_ID: z.string().optional(),
  ELASTICSEARCH_INDEX_PREFIX: z.string().optional(),
  ELASTICSEARCH_PASSWORD: z.string().optional(),
  ELASTICSEARCH_URL: z.string().optional(),
  ELASTICSEARCH_USERNAME: z.string().optional(),
  MILVUS_URI: z.string().optional(),
  MILVUS_DB: z.string().optional(),
  MILVUS_TOKEN: z.string().optional(),
  MILVUS_INDEX_TYPE: z
    .union([z.literal('AUTOINDEX'), z.literal('FLAT'), z.literal('HNSW'), z.literal('IVF_FLAT')])
    .optional(),
  MILVUS_METRIC_TYPE: z.string().optional(),
  MILVUS_HNSW_M: z.number().optional(),
  MILVUS_HNSW_EFCONSTRUCTION: z.number().optional(),
  MILVUS_IVF_FLAT_NLIST: z.number().optional(),
  OPENSEARCH_CERT_VERIFY: z.boolean().optional(),
  OPENSEARCH_PASSWORD: z.string().optional(),
  OPENSEARCH_SSL: z.boolean().optional(),
  OPENSEARCH_URI: z.string().optional(),
  OPENSEARCH_USERNAME: z.string().optional(),
  PGVECTOR_DB_URL: z.string().optional(),
  PGVECTOR_INITIALIZE_MAX_VECTOR_LENGTH: z.string().optional(),
  QDRANT_API_KEY: z.string().optional(),
  QDRANT_URI: z.string().optional(),
  QDRANT_ON_DISK: z.boolean().optional(),
  QDRANT_PREFER_GRPC: z.boolean().optional(),
  QDRANT_GRPC_PORT: z.number().optional(),
  ENABLE_QDRANT_MULTITENANCY_MODE: z.boolean().optional(),
  PINECONE_API_KEY: z.string().optional(),
  PINECONE_ENVIRONMENT: z.string().optional(),
  PINECONE_INDEX_NAME: z.string().optional(),
  PINECONE_DIMENSION: z.number().optional(),
  PINECONE_METRIC: z.string().optional(),
  PINECONE_CLOUD: z.string().optional(),
  CONTENT_EXTRACTION_ENGINE: z
    .union([
      z.literal('external'),
      z.literal('tika'),
      z.literal('docling'),
      z.literal('document_intelligence'),
      z.literal('mistral_ocr'),
    ])
    .optional(),
  MISTRAL_OCR_API_KEY: z.string().optional(),
  EXTERNAL_DOCUMENT_LOADER_URL: z.string().optional(),
  EXTERNAL_DOCUMENT_LOADER_API_KEY: z.string().optional(),
  TIKA_SERVER_URL: z.string().optional(),
  DOCLING_SERVER_URL: z.string().optional(),
  DOCLING_OCR_ENGINE: z.string().optional(),
  DOCLING_OCR_LANG: z.string().optional(),
  RAG_EMBEDDING_ENGINE: z.union([z.literal('ollama'), z.literal('openai')]).optional(),
  RAG_EMBEDDING_MODEL: z.string().optional(),
  ENABLE_RAG_HYBRID_SEARCH: z.boolean().optional(),
  RAG_TOP_K: z.number().optional(),
  RAG_TOP_K_RERANKER: z.number().optional(),
  RAG_RELEVANCE_THRESHOLD: z.number().optional(),
  RAG_TEMPLATE: z.string().optional(),
  RAG_TEXT_SPLITTER: z.union([z.literal('character'), z.literal('token')]).optional(),
  TIKTOKEN_CACHE_DIR: z.string().optional(),
  TIKTOKEN_ENCODING_NAME: z.string().optional(),
  CHUNK_SIZE: z.number().optional(),
  CHUNK_OVERLAP: z.number().optional(),
  PDF_EXTRACT_IMAGES: z.boolean().optional(),
  RAG_FILE_MAX_SIZE: z.number().optional(),
  RAG_FILE_MAX_COUNT: z.number().optional(),
  RAG_ALLOWED_FILE_EXTENSIONS: z.array(z.any()).optional(),
  RAG_RERANKING_MODEL: z.string().optional(),
  RAG_OPENAI_API_BASE_URL: z.string().optional(),
  RAG_OPENAI_API_KEY: z.string().optional(),
  RAG_EMBEDDING_OPENAI_BATCH_SIZE: z.number().optional(),
  RAG_EMBEDDING_BATCH_SIZE: z.number().optional(),
  RAG_OLLAMA_API_KEY: z.string().optional(),
  RAG_OLLAMA_BASE_URL: z.string().optional(),
  ENABLE_RETRIEVAL_QUERY_GENERATION: z.boolean().optional(),
  QUERY_GENERATION_PROMPT_TEMPLATE: z.string().optional(),
  BYPASS_EMBEDDING_AND_RETRIEVAL: z.boolean().optional(),
  DOCUMENT_INTELLIGENCE_ENDPOINT: z.string().optional(),
  DOCUMENT_INTELLIGENCE_KEY: z.string().optional(),
  ENABLE_RAG_LOCAL_WEB_FETCH: z.boolean().optional(),
  RAG_EMBEDDING_CONTENT_PREFIX: z.string().optional(),
  RAG_EMBEDDING_PREFIX_FIELD_NAME: z.string().optional(),
  RAG_EMBEDDING_QUERY_PREFIX: z.string().optional(),
  RAG_FULL_CONTEXT: z.boolean().optional(),
  ENABLE_GOOGLE_DRIVE_INTEGRATION: z.boolean().optional(),
  GOOGLE_DRIVE_CLIENT_ID: z.string().optional(),
  GOOGLE_DRIVE_API_KEY: z.string().optional(),
  ENABLE_ONEDRIVE_INTEGRATION: z.boolean().optional(),
  ONEDRIVE_CLIENT_ID: z.string().optional(),
  ENABLE_WEB_SEARCH: z.boolean().optional(),
  ENABLE_SEARCH_QUERY_GENERATION: z.boolean().optional(),
  WEB_SEARCH_TRUST_ENV: z.boolean().optional(),
  WEB_SEARCH_RESULT_COUNT: z.number().optional(),
  WEB_SEARCH_CONCURRENT_REQUESTS: z.number().optional(),
  WEB_SEARCH_ENGINE: z
    .union([
      z.literal('searxng'),
      z.literal('google_pse'),
      z.literal('brave'),
      z.literal('kagi'),
      z.literal('mojeek'),
      z.literal('bocha'),
      z.literal('serpstack'),
      z.literal('serper'),
      z.literal('serply'),
      z.literal('searchapi'),
      z.literal('serpapi'),
      z.literal('duckduckgo'),
      z.literal('tavily'),
      z.literal('jina'),
      z.literal('bing'),
      z.literal('exa'),
      z.literal('perplexity'),
      z.literal('sougou'),
    ])
    .optional(),
  BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL: z.boolean().optional(),
  SEARXNG_QUERY_URL: z.string().optional(),
  GOOGLE_PSE_API_KEY: z.string().optional(),
  GOOGLE_PSE_ENGINE_ID: z.string().optional(),
  BRAVE_SEARCH_API_KEY: z.string().optional(),
  KAGI_SEARCH_API_KEY: z.string().optional(),
  MOJEEK_SEARCH_API_KEY: z.string().optional(),
  SERPSTACK_API_KEY: z.string().optional(),
  SERPSTACK_HTTPS: z.boolean().optional(),
  SERPER_API_KEY: z.string().optional(),
  SERPLY_API_KEY: z.string().optional(),
  SEARCHAPI_API_KEY: z.string().optional(),
  SEARCHAPI_ENGINE: z.string().optional(),
  TAVILY_API_KEY: z.string().optional(),
  JINA_API_KEY: z.string().optional(),
  BING_SEARCH_V7_ENDPOINT: z.string().optional(),
  BING_SEARCH_V7_SUBSCRIPTION_KEY: z.string().optional(),
  BOCHA_SEARCH_API_KEY: z.string().optional(),
  EXA_API_KEY: z.string().optional(),
  SERPAPI_API_KEY: z.string().optional(),
  SERPAPI_ENGINE: z.string().optional(),
  SOUGOU_API_SID: z.string().optional(),
  SOUGOU_API_SK: z.string().optional(),
  TAVILY_EXTRACT_DEPTH: z.string().optional(),
  WEB_LOADER_ENGINE: z.union([z.literal('requests'), z.literal('playwright')]).optional(),
  PLAYWRIGHT_WS_URL: z.string().optional(),
  FIRECRAWL_API_BASE_URL: z.string().optional(),
  FIRECRAWL_API_KEY: z.string().optional(),
  PERPLEXITY_API_KEY: z.string().optional(),
  PLAYWRIGHT_TIMEOUT: z.number().optional(),
  YOUTUBE_LOADER_PROXY_URL: z.string().optional(),
  YOUTUBE_LOADER_LANGUAGE: z.string().optional(),
  WHISPER_MODEL: z.string().optional(),
  WHISPER_MODEL_DIR: z.string().optional(),
  WHISPER_VAD_FILTER: z.boolean().optional(),
  WHISPER_MODEL_AUTO_UPDATE: z.boolean().optional(),
  WHISPER_LANGUAGE: z.string().optional(),
  AUDIO_STT_ENGINE: z.union([z.literal('openai'), z.literal('deepgram')]).optional(),
  AUDIO_STT_MODEL: z.string().optional(),
  AUDIO_STT_OPENAI_API_BASE_URL: z.string().optional(),
  AUDIO_STT_OPENAI_API_KEY: z.string().optional(),
  AUDIO_STT_AZURE_API_KEY: z.string().optional(),
  AUDIO_STT_AZURE_REGION: z.string().optional(),
  AUDIO_STT_AZURE_LOCALES: z.string().optional(),
  DEEPGRAM_API_KEY: z.string().optional(),
  AUDIO_TTS_API_KEY: z.string().optional(),
  AUDIO_TTS_ENGINE: z
    .union([
      z.literal('azure'),
      z.literal('elevenlabs'),
      z.literal('openai'),
      z.literal('transformers'),
    ])
    .optional(),
  AUDIO_TTS_MODEL: z.string().optional(),
  AUDIO_TTS_VOICE: z.string().optional(),
  AUDIO_TTS_SPLIT_ON: z.string().optional(),
  AUDIO_TTS_AZURE_SPEECH_REGION: z.string().optional(),
  AUDIO_TTS_AZURE_SPEECH_OUTPUT_FORMAT: z.string().optional(),
  AUDIO_TTS_OPENAI_API_BASE_URL: z.string().optional(),
  AUDIO_TTS_OPENAI_API_KEY: z.string().optional(),
  IMAGE_GENERATION_ENGINE: z
    .union([
      z.literal('openai'),
      z.literal('comfyui'),
      z.literal('automatic1111'),
      z.literal('gemini'),
    ])
    .optional(),
  ENABLE_IMAGE_GENERATION: z.boolean().optional(),
  ENABLE_IMAGE_PROMPT_GENERATION: z.boolean().optional(),
  IMAGE_PROMPT_GENERATION_PROMPT_TEMPLATE: z.string().optional(),
  IMAGE_SIZE: z.string().optional(),
  IMAGE_STEPS: z.number().optional(),
  IMAGE_GENERATION_MODEL: z.string().optional(),
  AUTOMATIC1111_BASE_URL: z.string().optional(),
  AUTOMATIC1111_API_AUTH: z.string().optional(),
  AUTOMATIC1111_CFG_SCALE: z.number().optional(),
  AUTOMATIC1111_SAMPLER: z.string().optional(),
  AUTOMATIC1111_SCHEDULER: z.string().optional(),
  COMFYUI_BASE_URL: z.string().optional(),
  COMFYUI_API_KEY: z.string().optional(),
  COMFYUI_WORKFLOW: z.string().optional(),
  GEMINI_API_BASE_URL: z.string().optional(),
  GEMINI_API_KEY: z.string().optional(),
  IMAGES_GEMINI_API_BASE_URL: z.string().optional(),
  IMAGES_GEMINI_API_KEY: z.string().optional(),
  IMAGES_OPENAI_API_BASE_URL: z.string().optional(),
  IMAGES_OPENAI_API_KEY: z.string().optional(),
  ENABLE_OAUTH_SIGNUP: z.boolean().optional(),
  OAUTH_MERGE_ACCOUNTS_BY_EMAIL: z.boolean().optional(),
  OAUTH_UPDATE_PICTURE_ON_LOGIN: z.boolean().optional(),
  WEBUI_AUTH_TRUSTED_EMAIL_HEADER: z.string().optional(),
  WEBUI_AUTH_TRUSTED_NAME_HEADER: z.string().optional(),
  GOOGLE_CLIENT_ID: z.string().optional(),
  GOOGLE_CLIENT_SECRET: z.string().optional(),
  GOOGLE_OAUTH_SCOPE: z.string().optional(),
  GOOGLE_REDIRECT_URI: z.string().optional(),
  MICROSOFT_CLIENT_ID: z.string().optional(),
  MICROSOFT_CLIENT_SECRET: z.string().optional(),
  MICROSOFT_CLIENT_TENANT_ID: z.string().optional(),
  MICROSOFT_OAUTH_SCOPE: z.string().optional(),
  MICROSOFT_REDIRECT_URI: z.string().optional(),
  GITHUB_CLIENT_ID: z.string().optional(),
  GITHUB_CLIENT_SECRET: z.string().optional(),
  GITHUB_CLIENT_SCOPE: z.string().optional(),
  GITHUB_CLIENT_REDIRECT_URI: z.string().optional(),
  OAUTH_CLIENT_ID: z.string().optional(),
  OAUTH_CLIENT_SECRET: z.string().optional(),
  OPENID_PROVIDER_URL: z.string().optional(),
  OPENID_REDIRECT_URI: z.string().optional(),
  OAUTH_SCOPES: z.string().optional(),
  OAUTH_CODE_CHALLENGE_METHOD: z.string().optional(),
  OAUTH_PROVIDER_NAME: z.string().optional(),
  OAUTH_USERNAME_CLAIM: z.string().optional(),
  OAUTH_EMAIL_CLAIM: z.string().optional(),
  OAUTH_PICTURE_CLAIM: z.string().optional(),
  OAUTH_GROUP_CLAIM: z.string().optional(),
  ENABLE_OAUTH_ROLE_MANAGEMENT: z.boolean().optional(),
  ENABLE_OAUTH_GROUP_MANAGEMENT: z.boolean().optional(),
  OAUTH_ROLES_CLAIM: z.string().optional(),
  OAUTH_ALLOWED_ROLES: z.string().optional(),
  OAUTH_ADMIN_ROLES: z.string().optional(),
  OAUTH_ALLOWED_DOMAINS: z.string().optional(),
  ENABLE_LDAP: z.boolean().optional(),
  LDAP_SERVER_LABEL: z.string().optional(),
  LDAP_SERVER_HOST: z.string().optional(),
  LDAP_SERVER_PORT: z.number().optional(),
  LDAP_ATTRIBUTE_FOR_MAIL: z.string().optional(),
  LDAP_ATTRIBUTE_FOR_USERNAME: z.string().optional(),
  LDAP_APP_DN: z.string().optional(),
  LDAP_APP_PASSWORD: z.string().optional(),
  LDAP_SEARCH_BASE: z.string().optional(),
  LDAP_SEARCH_FILTER: z.string().optional(),
  LDAP_SEARCH_FILTERS: z.string().optional(),
  LDAP_USE_TLS: z.boolean().optional(),
  LDAP_CA_CERT_FILE: z.string().optional(),
  LDAP_VALIDATE_CERT: z.boolean().optional(),
  LDAP_CIPHERS: z.string().optional(),
  USER_PERMISSIONS_CHAT_CONTROLS: z.boolean().optional(),
  USER_PERMISSIONS_CHAT_FILE_UPLOAD: z.boolean().optional(),
  USER_PERMISSIONS_CHAT_DELETE: z.boolean().optional(),
  USER_PERMISSIONS_CHAT_EDIT: z.boolean().optional(),
  USER_PERMISSIONS_CHAT_STT: z.boolean().optional(),
  USER_PERMISSIONS_CHAT_TTS: z.boolean().optional(),
  USER_PERMISSIONS_CHAT_CALL: z.string().optional(),
  USER_PERMISSIONS_CHAT_MULTIPLE_MODELS: z.string().optional(),
  USER_PERMISSIONS_CHAT_TEMPORARY: z.boolean().optional(),
  USER_PERMISSIONS_CHAT_TEMPORARY_ENFORCED: z.string().optional(),
  USER_PERMISSIONS_FEATURES_DIRECT_TOOL_SERVERS: z.string().optional(),
  USER_PERMISSIONS_FEATURES_WEB_SEARCH: z.string().optional(),
  USER_PERMISSIONS_FEATURES_IMAGE_GENERATION: z.string().optional(),
  USER_PERMISSIONS_FEATURES_CODE_INTERPRETER: z.string().optional(),
  USER_PERMISSIONS_WORKSPACE_MODELS_ACCESS: z.boolean().optional(),
  USER_PERMISSIONS_WORKSPACE_KNOWLEDGE_ACCESS: z.boolean().optional(),
  USER_PERMISSIONS_WORKSPACE_PROMPTS_ACCESS: z.boolean().optional(),
  USER_PERMISSIONS_WORKSPACE_TOOLS_ACCESS: z.boolean().optional(),
  USER_PERMISSIONS_WORKSPACE_MODELS_ALLOW_PUBLIC_SHARING: z.string().optional(),
  USER_PERMISSIONS_WORKSPACE_KNOWLEDGE_ALLOW_PUBLIC_SHARING: z.string().optional(),
  USER_PERMISSIONS_WORKSPACE_PROMPTS_ALLOW_PUBLIC_SHARING: z.string().optional(),
  USER_PERMISSIONS_WORKSPACE_TOOLS_ALLOW_PUBLIC_SHARING: z.string().optional(),
  STORAGE_PROVIDER: z.union([z.literal('s3'), z.literal('gcs'), z.literal('azure')]).optional(),
  S3_ACCESS_KEY_ID: z.string().optional(),
  S3_ADDRESSING_STYLE: z.string().optional(),
  S3_BUCKET_NAME: z.string().optional(),
  S3_ENDPOINT_URL: z.string().optional(),
  S3_KEY_PREFIX: z.string().optional(),
  S3_REGION_NAME: z.string().optional(),
  S3_SECRET_ACCESS_KEY: z.string().optional(),
  S3_USE_ACCELERATE_ENDPOINT: z.string().optional(),
  S3_ENABLE_TAGGING: z.string().optional(),
  GOOGLE_APPLICATION_CREDENTIALS_JSON: z.string().optional(),
  GCS_BUCKET_NAME: z.string().optional(),
  AZURE_STORAGE_ENDPOINT: z.string().optional(),
  AZURE_STORAGE_CONTAINER_NAME: z.string().optional(),
  AZURE_STORAGE_KEY: z.string().optional(),
  DATABASE_URL: z.string().optional(),
  DATABASE_SCHEMA: z.string().optional(),
  DATABASE_POOL_SIZE: z.number().optional(),
  DATABASE_POOL_MAX_OVERFLOW: z.number().optional(),
  DATABASE_POOL_TIMEOUT: z.number().optional(),
  DATABASE_POOL_RECYCLE: z.number().optional(),
  REDIS_URL: z.string().optional(),
  REDIS_SENTINEL_HOSTS: z.string().optional(),
  REDIS_SENTINEL_PORT: z.number().optional(),
  ENABLE_WEBSOCKET_SUPPORT: z.boolean().optional(),
  WEBSOCKET_MANAGER: z.string().optional(),
  WEBSOCKET_REDIS_URL: z.string().optional(),
  WEBSOCKET_SENTINEL_HOSTS: z.string().optional(),
  WEBSOCKET_SENTINEL_PORT: z.number().optional(),
  UVICORN_WORKERS: z.number().optional(),
  PIP_OPTIONS: z.string().optional(),
  PIP_PACKAGE_INDEX_OPTIONS: z.string().optional(),
});

// TypeScript type for complete configuration
export type OpenWebUIConfig = z.infer<typeof OpenWebUIConfigSchema>;
